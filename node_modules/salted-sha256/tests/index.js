// Import.
const assert = require('assert');
const saltedSha256 = require('../index');

// Constants.
const TEST_DATA_LIST = [
  { data: 'Some data.', salt: undefined, correctResult: 'a3d119683e015b0cbbcd2c24b2e531698bf552bd184c56a86b8e115871600a8d' },
  { data: 'Some data.', salt: '', correctResult: 'a3d119683e015b0cbbcd2c24b2e531698bf552bd184c56a86b8e115871600a8d' },
  { data: 'Some data.', salt: 'SUPER-S@LT!', correctResult: '70dc46430221cdfaddd554e7d1c12d474a2c98e8eaf6ea24d08b1185be1a78d0' },
  { data: undefined, salt: 'SUPER-S@LT!', correctResult: 'a33ca1bff9f0935d0a852bc8afed4ff920efbf6bf9738c228487b4c277175ac3' },
  { data: '', salt: 'SUPER-S@LT!', correctResult: 'a33ca1bff9f0935d0a852bc8afed4ff920efbf6bf9738c228487b4c277175ac3' }
];

/**
 * Check sync.
 */
describe('Check sync.', () => {
  it('Should be equals with precalculated results.', () => {
    for (const testData of TEST_DATA_LIST) {
      const { data, salt, correctResult } = testData;
      const saltedHash = saltedSha256(data, salt);
      assert.equal(saltedHash, correctResult);
    }
  });
});

/**
 * Check async.
 */
describe('Check async.', () => {
  it('Should be equals with precalculated results.', async () => {
    for (const testData of TEST_DATA_LIST) {
      const { data, salt, correctResult } = testData;
      const saltedHash = await saltedSha256(data, salt, true);
      assert.equal(saltedHash, correctResult);
    }
  });
});
